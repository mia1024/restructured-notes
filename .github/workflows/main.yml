name: Test
on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

defaults:
  run:
    shell: bash

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: '12.13.0'

      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
            ${{ runner.os }}
      
      - name: Update Apt
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: sudo apt update
        
      - name: Install linux dependencies
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: >
          sudo apt-get -y install build-essential clang libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
          libkrb5-dev libdbus-1-dev libgtk-3-dev libnotify-dev libgnome-keyring-dev libasound2-dev
          libcap-dev libcups2-dev libxtst-dev libxss1 libnss3-dev gcc-multilib g++-multilib curl
          gperf bison python-dbusmock openjdk-8-jre

      - name: Run setup_env script
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: ./setup_env
      - name: Run test
        run: yarn test:nonyan

  macOS:
    runs-on: macos-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: '12.13.0'

      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
            ${{ runner.os }}

      - name: Install Dependencies
        run: brew install pkg-config cairo pango libpng jpeg giflib librsvg pixman

      - name: Run setup_env script
        run: ./setup_env
      - name: Run test
        run: yarn test:nonyan

  windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: '12.13.0'

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
            ${{ runner.os }}

      - name: Download GTK2
        shell: powershell
        run: |
          wget http://ftp.gnome.org/pub/GNOME/binaries/win64/gtk+/2.22/gtk+-bundle_2.22.1-20101229_win64.zip -OutFile gtk.zip
          expand-archive gtk.zip
          mv gtk C:\GTK

      - name: Install libjpeg
        shell: powershell
        run: |
            wget 'https://downloads.sourceforge.net/project/libjpeg-turbo/2.0.5/libjpeg-turbo-2.0.5-gcc64.exe?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Flibjpeg-turbo%2Ffiles%2F2.0.5%2Flibjpeg-turbo-2.0.5-gcc64.exe%2Fdownload&ts=1593231031' -OutFile jpeg.exe
            .\jpeg.exe /S /D=C:\libjpeg-turbo

      - name: Run setup_env script
        run: ./setup_env

      - name: Run test
        run: yarn test:noelectron:nonyan