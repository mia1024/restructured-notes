#!/bin/bash

cd "${0%/*}"
BSC_VERBOSE=1
source utilities.sh

if command -v md5 > /dev/null; then
  md5Program=md5
elif command -v md5sum > /dev/null; then
  md5Program=md5sum
else
  errorMessage "Cannot find md5 or md5sum"
  exit 1
fi

yarn

rebuild_nodegit() {
  yarn compile-dependencies
  if [ $? -ne 0 ]; then
    warn "yarn compile-dependencies failed. Trying electron-rebuild instead..."
    $(npm bin)/electron-rebuild
    if [ $? -ne 0 ]; then
      errorMessage "Cannot compile nodegit"
      exit 1
    fi
  fi
  echo "$($md5Program node_modules/nodegit/build/Release/nodegit.node)" >node_modules/nodegit/.rebuilt-for-electron
}

if [ ! -f "node_modules/nodegit/.rebuilt-for-electron" ]; then
  rebuild_nodegit
else
  if [ "$1" != '-f' ]; then
    if [ "$($md5Program node_modules/nodegit/build/Release/nodegit.node)" \
      == "$(cat node_modules/nodegit/.rebuilt-for-electron)" ]; then

      info 'Skipping nodegit as it has already been built for electron.'
      info 'run setup_env -f to force rebuild'
      info
    else
      rebuild_nodegit
    fi
  else
    rebuild_nodegit
  fi
fi

# Canvas is required by jsdom for testing

rebuild_canvas() {
  npm rebuild canvas --target=8.3.3 --runtime=electron --dist-url='https://atom.io/download/electron' --update-binary
  if [ $? -ne 0 ]; then
    errorMessage 'cannot rebuild canvas'
    exit 1
  fi
  echo "$($md5Program node_modules/canvas/build/Release/canvas.node)" >node_modules/canvas/.rebuilt-for-electron
}

if [ ! -f "node_modules/canvas/.rebuilt-for-electron" ]; then
  rebuild_canvas

else
  if [ "$1" != '-f' ]; then
    if [ "$($md5Program node_modules/canvas/build/Release/canvas.node)" \
      == "$(cat node_modules/canvas/.rebuilt-for-electron)" ]; then
      info 'Skipping canvas as it has already been built for electron.'
      info 'run setup_env -f to force rebuild'
      info
    else
      rebuild_canvas
    fi
  else
    rebuild_canvas
    if [ $? -ne 0 ]; then
      errorMessage 'cannot rebuild canvas'
      exit 1
    fi
  fi
fi
